/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 * Generated by: https://openapi-generator.tech
 */

/// DocType : The type of document.  `DOCUMENT_TYPE_PAYSTUB`: A paystub.  `DOCUMENT_TYPE_BANK_STATEMENT`: A bank statement.  `DOCUMENT_TYPE_US_TAX_W2`: A W-2 wage and tax statement provided by a US employer reflecting wages earned by the employee.  `DOCUMENT_TYPE_US_MILITARY_ERAS`: An electronic Retirement Account Statement (eRAS) issued by the US military.  `DOCUMENT_TYPE_US_MILITARY_LES`: A Leave and Earnings Statement (LES) issued by the US military.  `DOCUMENT_TYPE_US_MILITARY_CLES`: A Civilian Leave and Earnings Statment (CLES) issued by the US military.  `DOCUMENT_TYPE_GIG`: Used to indicate that the income is related to gig work. Does not necessarily correspond to a specific document type.  `DOCUMENT_TYPE_NONE`: Used to indicate that there is no underlying document for the data.  `UNKNOWN`: Document type could not be determined.

/// The type of document.  `DOCUMENT_TYPE_PAYSTUB`: A paystub.  `DOCUMENT_TYPE_BANK_STATEMENT`: A bank statement.  `DOCUMENT_TYPE_US_TAX_W2`: A W-2 wage and tax statement provided by a US employer reflecting wages earned by the employee.  `DOCUMENT_TYPE_US_MILITARY_ERAS`: An electronic Retirement Account Statement (eRAS) issued by the US military.  `DOCUMENT_TYPE_US_MILITARY_LES`: A Leave and Earnings Statement (LES) issued by the US military.  `DOCUMENT_TYPE_US_MILITARY_CLES`: A Civilian Leave and Earnings Statment (CLES) issued by the US military.  `DOCUMENT_TYPE_GIG`: Used to indicate that the income is related to gig work. Does not necessarily correspond to a specific document type.  `DOCUMENT_TYPE_NONE`: Used to indicate that there is no underlying document for the data.  `UNKNOWN`: Document type could not be determined.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DocType {
    #[serde(rename = "UNKNOWN")]
    UNKNOWN,
    #[serde(rename = "DOCUMENT_TYPE_PAYSTUB")]
    DOCUMENTTYPEPAYSTUB,
    #[serde(rename = "DOCUMENT_TYPE_BANK_STATEMENT")]
    DOCUMENTTYPEBANKSTATEMENT,
    #[serde(rename = "DOCUMENT_TYPE_US_TAX_W2")]
    DOCUMENTTYPEUSTAXW2,
    #[serde(rename = "DOCUMENT_TYPE_US_MILITARY_ERAS")]
    DOCUMENTTYPEUSMILITARYERAS,
    #[serde(rename = "DOCUMENT_TYPE_US_MILITARY_LES")]
    DOCUMENTTYPEUSMILITARYLES,
    #[serde(rename = "DOCUMENT_TYPE_US_MILITARY_CLES")]
    DOCUMENTTYPEUSMILITARYCLES,
    #[serde(rename = "DOCUMENT_TYPE_GIG")]
    DOCUMENTTYPEGIG,
    #[serde(rename = "DOCUMENT_TYPE_NONE")]
    DOCUMENTTYPENONE,

}

impl ToString for DocType {
    fn to_string(&self) -> String {
        match self {
            Self::UNKNOWN => String::from("UNKNOWN"),
            Self::DOCUMENTTYPEPAYSTUB => String::from("DOCUMENT_TYPE_PAYSTUB"),
            Self::DOCUMENTTYPEBANKSTATEMENT => String::from("DOCUMENT_TYPE_BANK_STATEMENT"),
            Self::DOCUMENTTYPEUSTAXW2 => String::from("DOCUMENT_TYPE_US_TAX_W2"),
            Self::DOCUMENTTYPEUSMILITARYERAS => String::from("DOCUMENT_TYPE_US_MILITARY_ERAS"),
            Self::DOCUMENTTYPEUSMILITARYLES => String::from("DOCUMENT_TYPE_US_MILITARY_LES"),
            Self::DOCUMENTTYPEUSMILITARYCLES => String::from("DOCUMENT_TYPE_US_MILITARY_CLES"),
            Self::DOCUMENTTYPEGIG => String::from("DOCUMENT_TYPE_GIG"),
            Self::DOCUMENTTYPENONE => String::from("DOCUMENT_TYPE_NONE"),
        }
    }
}

impl Default for DocType {
    fn default() -> DocType {
        Self::UNKNOWN
    }
}




