/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 * Generated by: https://openapi-generator.tech
 */

/// WalletTransaction : The transaction details



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WalletTransaction {
    /// A unique ID identifying the transaction
    #[serde(rename = "transaction_id")]
    pub transaction_id: String,
    /// A reference for the transaction
    #[serde(rename = "reference")]
    pub reference: String,
    /// The type of of the transaction. Currently, only `\"PAYOUT\"` is supported.
    #[serde(rename = "type")]
    pub _type: Type,
    #[serde(rename = "amount")]
    pub amount: crate::models::WalletTransactionAmount,
    #[serde(rename = "counterparty")]
    pub counterparty: crate::models::WalletTransactionCounterparty,
    #[serde(rename = "status")]
    pub status: crate::models::WalletTransactionStatus,
    /// Timestamp when the transaction was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl WalletTransaction {
    /// The transaction details
    pub fn new(transaction_id: String, reference: String, _type: Type, amount: crate::models::WalletTransactionAmount, counterparty: crate::models::WalletTransactionCounterparty, status: crate::models::WalletTransactionStatus, created_at: String) -> WalletTransaction {
        WalletTransaction {
            transaction_id,
            reference,
            _type,
            amount,
            counterparty,
            status,
            created_at,
        }
    }
}

/// The type of of the transaction. Currently, only `\"PAYOUT\"` is supported.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "PAYOUT")]
    PAYOUT,
}

impl Default for Type {
    fn default() -> Type {
        Self::PAYOUT
    }
}

