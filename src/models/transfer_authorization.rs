/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TransferAuthorization : Contains the authorization decision for a proposed transfer



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TransferAuthorization {
    /// Plaid’s unique identifier for a transfer authorization.
    #[serde(rename = "id")]
    pub id: String,
    /// The datetime representing when the authorization was created, in the format `2006-01-02T15:04:05Z`.
    #[serde(rename = "created")]
    pub created: String,
    ///  A decision regarding the proposed transfer.  `approved` – The proposed transfer has received the end user's consent and has been approved for processing. Plaid has also reviewed the proposed transfer and has approved it for processing.   `permitted` – Plaid was unable to fetch the information required to approve or decline the proposed transfer. You may proceed with the transfer, but further review is recommended. Plaid is awaiting further instructions from the client.  `declined` – Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
    #[serde(rename = "decision")]
    pub decision: Decision,
    #[serde(rename = "decision_rationale")]
    pub decision_rationale: Option<crate::models::TransferAuthorizationDecisionRationale>,
    #[serde(rename = "guarantee_decision")]
    pub guarantee_decision: Option<crate::models::TransferAuthorizationGuaranteeDecision>,
    #[serde(rename = "guarantee_decision_rationale")]
    pub guarantee_decision_rationale: Option<crate::models::TransferAuthorizationGuaranteeDecisionRationale>,
    #[serde(rename = "proposed_transfer")]
    pub proposed_transfer: crate::models::TransferAuthorizationProposedTransfer,
}

impl TransferAuthorization {
    /// Contains the authorization decision for a proposed transfer
    pub fn new(id: String, created: String, decision: Decision, decision_rationale: Option<crate::models::TransferAuthorizationDecisionRationale>, guarantee_decision: Option<crate::models::TransferAuthorizationGuaranteeDecision>, guarantee_decision_rationale: Option<crate::models::TransferAuthorizationGuaranteeDecisionRationale>, proposed_transfer: crate::models::TransferAuthorizationProposedTransfer) -> TransferAuthorization {
        TransferAuthorization {
            id,
            created,
            decision,
            decision_rationale,
            guarantee_decision,
            guarantee_decision_rationale,
            proposed_transfer,
        }
    }
}

///  A decision regarding the proposed transfer.  `approved` – The proposed transfer has received the end user's consent and has been approved for processing. Plaid has also reviewed the proposed transfer and has approved it for processing.   `permitted` – Plaid was unable to fetch the information required to approve or decline the proposed transfer. You may proceed with the transfer, but further review is recommended. Plaid is awaiting further instructions from the client.  `declined` – Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Decision {
    #[serde(rename = "approved")]
    Approved,
    #[serde(rename = "permitted")]
    Permitted,
    #[serde(rename = "declined")]
    Declined,
}

impl Default for Decision {
    fn default() -> Decision {
        Self::Approved
    }
}

