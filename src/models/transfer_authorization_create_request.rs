/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TransferAuthorizationCreateRequest : Defines the request schema for `/transfer/authorization/create`



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TransferAuthorizationCreateRequest {
    /// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    /// The Plaid `access_token` for the account that will be debited or credited.
    #[serde(rename = "access_token")]
    pub access_token: String,
    /// The Plaid `account_id` for the account that will be debited or credited.
    #[serde(rename = "account_id")]
    pub account_id: String,
    #[serde(rename = "type")]
    pub _type: crate::models::TransferType,
    #[serde(rename = "network")]
    pub network: crate::models::TransferNetwork,
    /// The amount of the transfer (decimal string with two digits of precision e.g. \"10.00\").
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "ach_class")]
    pub ach_class: crate::models::AchClass,
    #[serde(rename = "user")]
    pub user: crate::models::TransferUserInRequest,
    #[serde(rename = "device", skip_serializing_if = "Option::is_none")]
    pub device: Option<crate::models::TransferAuthorizationDevice>,
    /// Plaid's unique identifier for the origination account for this authorization. If not specified, the default account will be used.
    #[serde(rename = "origination_account_id", skip_serializing_if = "Option::is_none")]
    pub origination_account_id: Option<String>,
    /// The currency of the transfer amount. The default value is \"USD\".
    #[serde(rename = "iso_currency_code", skip_serializing_if = "Option::is_none")]
    pub iso_currency_code: Option<String>,
}

impl TransferAuthorizationCreateRequest {
    /// Defines the request schema for `/transfer/authorization/create`
    pub fn new(access_token: String, account_id: String, _type: crate::models::TransferType, network: crate::models::TransferNetwork, amount: String, ach_class: crate::models::AchClass, user: crate::models::TransferUserInRequest) -> TransferAuthorizationCreateRequest {
        TransferAuthorizationCreateRequest {
            client_id: None,
            secret: None,
            access_token,
            account_id,
            _type,
            network,
            amount,
            ach_class,
            user,
            device: None,
            origination_account_id: None,
            iso_currency_code: None,
        }
    }
}


